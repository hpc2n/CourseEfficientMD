* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v1.8 on Jun, 10. 2017. JOBID=1497111557
* SOLVATE PROTEIN IN WATER BOX
*

DIMENS CHSIZE 3000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

! Read PSF and Coordinates
open read unit 10 card name step1_pdbreader.psf
read psf  unit 10 card

open read unit 10 card name step1_pdbreader.crd
read coor unit 10 card

!Reorient Solute (should be here)
coor orient 
coor stat sele all end

!Read Water in
stream step2.1_waterbox.str

open read card unit 30 name step2.1_waterbox.crd
read coor card unit 30 append
close unit 30

!
! Add Ion?
!

stream step2.2_ions.prm

if npos .gt. 0 then
   read sequence @posid @npos
   generate @posid warn
endif

if nneg .gt. 0 then
   read sequence @negid @nneg
   generate @negid warn
endif

calc nion = @npos + @nneg

if nion .gt. 0 then
   open read unit 10 card name step2.2_ions.crd
   read coor unit 10 card append
endif

!
! Remove water molecules close to or overlapped with 
! biomolecule, crystal water, and generated ions
!

define TOTO sele .not. hydrogen .and. .not. segid SOLV end
coor stat sele TOTO end
coor stat sele type OH2 .and. segid SOLV end

delete atom sele .byres. ( ( type OH2 .and. segid SOLV ) .and. ( TOTO .around. 2.8 ) ) end

join SOLV renumber
coor stat sele type OH2 .and. segid SOLV end
set nwater ?nsel

!
! Write coordinates and information of solvated system
!

open write unit 10 card name step2_solvator.psf
write psf  unit 10 card

open write unit 10 card name step2_solvator.xplor_ext.psf
write psf  xplo unit 10 card

ioformat noext
open write unit 10 card name step2_solvator.xplor.psf
write psf  xplo unit 10 card

ioformat ext
open write card unit 10 name step2_solvator.pdb
write coor pdb  unit 10 

open write unit 10 card name step2_solvator.crd
write coor unit 10 card

open write unit 90 card name step2_solvator.str
write title unit 90
* read sequence TIP3 @nwater
* generate SOLV setup noangle nodihedral
* set npos = @npos
* set nneg = @nneg
* set posid = @posid
* set negid = @negid
* if npos .gt. 0 then
*  read sequence @posid @npos
*  generate @posid warn
* endif
* if nneg .gt. 0 then
*  read sequence @negid @nneg
*  generate @negid warn
* endif
*

stop